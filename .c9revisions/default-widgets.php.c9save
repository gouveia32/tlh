{"ts":1381342029216,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<?php\n/**\n * Default Widgets\n *\n * @package WordPress\n * @subpackage Widgets\n */\n\n/**\n * Pages widget class\n *\n * @since 2.8.0\n */\nclass WP_Widget_Pages extends WP_Widget {\n\n\tfunction __construct() {\n\t\t$widget_ops = array('classname' => 'widget_pages', 'description' => __( 'Your site&#8217;s WordPress Pages') );\n\t\tparent::__construct('pages', __('Pages'), $widget_ops);\n\t}\n\n\tfunction widget( $args, $instance ) {\n\t\textract( $args );\n\n\t\t$title = apply_filters('widget_title', empty( $instance['title'] ) ? __( 'Pages' ) : $instance['title'], $instance, $this->id_base);\n\t\t$sortby = empty( $instance['sortby'] ) ? 'menu_order' : $instance['sortby'];\n\t\t$exclude = empty( $instance['exclude'] ) ? '' : $instance['exclude'];\n\n\t\tif ( $sortby == 'menu_order' )\n\t\t\t$sortby = 'menu_order, post_title';\n\n\t\t$out = wp_list_pages( apply_filters('widget_pages_args', array('title_li' => '', 'echo' => 0, 'sort_column' => $sortby, 'exclude' => $exclude) ) );\n\n\t\tif ( !empty( $out ) ) {\n\t\t\techo $before_widget;\n\t\t\tif ( $title)\n\t\t\t\techo $before_title . $title . $after_title;\n\t\t?>\n\t\t<ul>\n\t\t\t<?php echo $out; ?>\n\t\t</ul>\n\t\t<?php\n\t\t\techo $after_widget;\n\t\t}\n\t}\n\n\tfunction update( $new_instance, $old_instance ) {\n\t\t$instance = $old_instance;\n\t\t$instance['title'] = strip_tags($new_instance['title']);\n\t\tif ( in_array( $new_instance['sortby'], array( 'post_title', 'menu_order', 'ID' ) ) ) {\n\t\t\t$instance['sortby'] = $new_instance['sortby'];\n\t\t} else {\n\t\t\t$instance['sortby'] = 'menu_order';\n\t\t}\n\n\t\t$instance['exclude'] = strip_tags( $new_instance['exclude'] );\n\n\t\treturn $instance;\n\t}\n\n\tfunction form( $instance ) {\n\t\t//Defaults\n\t\t$instance = wp_parse_args( (array) $instance, array( 'sortby' => 'post_title', 'title' => '', 'exclude' => '') );\n\t\t$title = esc_attr( $instance['title'] );\n\t\t$exclude = esc_attr( $instance['exclude'] );\n\t?>\n\t\t<p><label for=\"<?php echo $this->get_field_id('title'); ?>\"><?php _e('Title:'); ?></label> <input class=\"widefat\" id=\"<?php echo $this->get_field_id('title'); ?>\" name=\"<?php echo $this->get_field_name('title'); ?>\" type=\"text\" value=\"<?php echo $title; ?>\" /></p>\n\t\t<p>\n\t\t\t<label for=\"<?php echo $this->get_field_id('sortby'); ?>\"><?php _e( 'Sort by:' ); ?></label>\n\t\t\t<select name=\"<?php echo $this->get_field_name('sortby'); ?>\" id=\"<?php echo $this->get_field_id('sortby'); ?>\" class=\"widefat\">\n\t\t\t\t<option value=\"post_title\"<?php selected( $instance['sortby'], 'post_title' ); ?>><?php _e('Page title'); ?></option>\n\t\t\t\t<option value=\"menu_order\"<?php selected( $instance['sortby'], 'menu_order' ); ?>><?php _e('Page order'); ?></option>\n\t\t\t\t<option value=\"ID\"<?php selected( $instance['sortby'], 'ID' ); ?>><?php _e( 'Page ID' ); ?></option>\n\t\t\t</select>\n\t\t</p>\n\t\t<p>\n\t\t\t<label for=\"<?php echo $this->get_field_id('exclude'); ?>\"><?php _e( 'Exclude:' ); ?></label> <input type=\"text\" value=\"<?php echo $exclude; ?>\" name=\"<?php echo $this->get_field_name('exclude'); ?>\" id=\"<?php echo $this->get_field_id('exclude'); ?>\" class=\"widefat\" />\n\t\t\t<br />\n\t\t\t<small><?php _e( 'Page IDs, separated by commas.' ); ?></small>\n\t\t</p>\n<?php\n\t}\n\n}\n\n/**\n * Links widget class\n *\n * @since 2.8.0\n */\nclass WP_Widget_Links extends WP_Widget {\n\n\tfunction __construct() {\n\t\t$widget_ops = array('description' => __( \"Your blogroll\" ) );\n\t\tparent::__construct('links', __('Links'), $widget_ops);\n\t}\n\n\tfunction widget( $args, $instance ) {\n\t\textract($args, EXTR_SKIP);\n\n\t\t$show_description = isset($instance['description']) ? $instance['description'] : false;\n\t\t$show_name = isset($instance['name']) ? $instance['name'] : false;\n\t\t$show_rating = isset($instance['rating']) ? $instance['rating'] : false;\n\t\t$show_images = isset($instance['images']) ? $instance['images'] : true;\n\t\t$category = isset($instance['category']) ? $instance['category'] : false;\n\t\t$orderby = isset( $instance['orderby'] ) ? $instance['orderby'] : 'name';\n\t\t$order = $orderby == 'rating' ? 'DESC' : 'ASC';\n\t\t$limit = isset( $instance['limit'] ) ? $instance['limit'] : -1;\n\n\t\t$before_widget = preg_replace('/id=\"[^\"]*\"/','id=\"%id\"', $before_widget);\n\t\twp_list_bookmarks(apply_filters('widget_links_args', array(\n\t\t\t'title_before' => $before_title, 'title_after' => $after_title,\n\t\t\t'category_before' => $before_widget, 'category_after' => $after_widget,\n\t\t\t'show_images' => $show_images, 'show_description' => $show_description,\n\t\t\t'show_name' => $show_name, 'show_rating' => $show_rating,\n\t\t\t'category' => $category, 'class' => 'linkcat widget',\n\t\t\t'orderby' => $orderby, 'order' => $order,\n\t\t\t'limit' => $limit,\n\t\t)));\n\t}\n\n\tfunction update( $new_instance, $old_instance ) {\n\t\t$new_instance = (array) $new_instance;\n\t\t$instance = array( 'images' => 0, 'name' => 0, 'description' => 0, 'rating' => 0 );\n\t\tforeach ( $instance as $field => $val ) {\n\t\t\tif ( isset($new_instance[$field]) )\n\t\t\t\t$instance[$field] = 1;\n\t\t}\n\n\t\t$instance['orderby'] = 'name';\n\t\tif ( in_array( $new_instance['orderby'], array( 'name', 'rating', 'id', 'rand' ) ) )\n\t\t\t$instance['orderby'] = $new_instance['orderby'];\n\n\t\t$instance['category'] = intval( $new_instance['category'] );\n\t\t$instance['limit'] = ! empty( $new_instance['limit'] ) ? intval( $new_instance['limit'] ) : -1;\n\n\t\treturn $instance;\n\t}\n\n\tfunction form( $instance ) {\n\n\t\t//Defaults\n\t\t$instance = wp_parse_args( (array) $instance, array( 'images' => true, 'name' => true, 'description' => false, 'rating' => false, 'category' => false, 'orderby' => 'name', 'limit' => -1 ) );\n\t\t$link_cats = get_terms( 'link_category' );\n\t\tif ( ! $limit = intval( $instance['limit'] ) )\n\t\t\t$limit = -1;\n?>\n\t\t<p>\n\t\t<label for=\"<?php echo $this->get_field_id('category'); ?>\"><?php _e( 'Select Link Category:' ); ?></label>\n\t\t<select class=\"widefat\" id=\"<?php echo $this->get_field_id('category'); ?>\" name=\"<?php echo $this->get_field_name('category'); ?>\">\n\t\t<option value=\"\"><?php _ex('All Links', 'links widget'); ?></option>\n\t\t<?php\n\t\tforeach ( $link_cats as $link_cat ) {\n\t\t\techo '<option value=\"' . intval( $link_cat->term_id ) . '\"'\n\t\t\t\t. selected( $instance['category'], $link_cat->term_id, false )\n\t\t\t\t. '>' . $link_cat->name . \"</option>\\n\";\n\t\t}\n\t\t?>\n\t\t</select>\n\t\t<label for=\"<?php echo $this->get_field_id('orderby'); ?>\"><?php _e( 'Sort by:' ); ?></label>\n\t\t<select name=\"<?php echo $this->get_field_name('orderby'); ?>\" id=\"<?php echo $this->get_field_id('orderby'); ?>\" class=\"widefat\">\n\t\t\t<option value=\"name\"<?php selected( $instance['orderby'], 'name' ); ?>><?php _e( 'Link title' ); ?></option>\n\t\t\t<option value=\"rating\"<?php selected( $instance['orderby'], 'rating' ); ?>><?php _e( 'Link rating' ); ?></option>\n\t\t\t<option value=\"id\"<?php selected( $instance['orderby'], 'id' ); ?>><?php _e( 'Link ID' ); ?></option>\n\t\t\t<option value=\"rand\"<?php selected( $instance['orderby'], 'rand' ); ?>><?php _ex( 'Random', 'Links widget' ); ?></option>\n\t\t</select>\n\t\t</p>\n\t\t<p>\n\t\t<input class=\"checkbox\" type=\"checkbox\" <?php checked($instance['images'], true) ?> id=\"<?php echo $this->get_field_id('images'); ?>\" name=\"<?php echo $this->get_field_name('images'); ?>\" />\n\t\t<label for=\"<?php echo $this->get_field_id('images'); ?>\"><?php _e('Show Link Image'); ?></label><br />\n\t\t<input class=\"checkbox\" type=\"checkbox\" <?php checked($instance['name'], true) ?> id=\"<?php echo $this->get_field_id('name'); ?>\" name=\"<?php echo $this->get_field_name('name'); ?>\" />\n\t\t<label for=\"<?php echo $this->get_field_id('name'); ?>\"><?php _e('Show Link Name'); ?></label><br />\n\t\t<input class=\"checkbox\" type=\"checkbox\" <?php checked($instance['description'], true) ?> id=\"<?php echo $this->get_field_id('description'); ?>\" name=\"<?php echo $this->get_field_name('description'); ?>\" />\n\t\t<label for=\"<?php echo $this->get_field_id('description'); ?>\"><?php _e('Show Link Description'); ?></label><br />\n\t\t<input class=\"checkbox\" type=\"checkbox\" <?php checked($instance['rating'], true) ?> id=\"<?php echo $this->get_field_id('rating'); ?>\" name=\"<?php echo $this->get_field_name('rating'); ?>\" />\n\t\t<label for=\"<?php echo $this->get_field_id('rating'); ?>\"><?php _e('Show Link Rating'); ?></label>\n\t\t</p>\n\t\t<p>\n\t\t<label for=\"<?php echo $this->get_field_id('limit'); ?>\"><?php _e( 'Number of links to show:' ); ?></label>\n\t\t<input id=\"<?php echo $this->get_field_id('limit'); ?>\" name=\"<?php echo $this->get_field_name('limit'); ?>\" type=\"text\" value=\"<?php echo $limit == -1 ? '' : intval( $limit ); ?>\" size=\"3\" />\n\t\t</p>\n<?php\n\t}\n}\n\n/**\n * Search widget class\n *\n * @since 2.8.0\n */\nclass WP_Widget_Search extends WP_Widget {\n\n\tfunction __construct() {\n\t\t$widget_ops = array('classname' => 'widget_search', 'description' => __( \"A search form for your site\") );\n\t\tparent::__construct('search', __('Search'), $widget_ops);\n\t}\n\n\tfunction widget( $args, $instance ) {\n\t\textract($args);\n\t\t$title = apply_filters( 'widget_title', empty( $instance['title'] ) ? '' : $instance['title'], $instance, $this->id_base );\n\n\t\techo $before_widget;\n\t\tif ( $title )\n\t\t\techo $before_title . $title . $after_title;\n\n\t\t// Use current theme search form if it exists\n\t\tget_search_form();\n\n\t\techo $after_widget;\n\t}\n\n\tfunction form( $instance ) {\n\t\t$instance = wp_parse_args( (array) $instance, array( 'title' => '') );\n\t\t$title = $instance['title'];\n?>\n\t\t<p><label for=\"<?php echo $this->get_field_id('title'); ?>\"><?php _e('Title:'); ?> <input class=\"widefat\" id=\"<?php echo $this->get_field_id('title'); ?>\" name=\"<?php echo $this->get_field_name('title'); ?>\" type=\"text\" value=\"<?php echo esc_attr($title); ?>\" /></label></p>\n<?php\n\t}\n\n\tfunction update( $new_instance, $old_instance ) {\n\t\t$instance = $old_instance;\n\t\t$new_instance = wp_parse_args((array) $new_instance, array( 'title' => ''));\n\t\t$instance['title'] = strip_tags($new_instance['title']);\n\t\treturn $instance;\n\t}\n\n}\n\n/**\n * Archives widget class\n *\n * @since 2.8.0\n */\nclass WP_Widget_Archives extends WP_Widget {\n\n\tfunction __construct() {\n\t\t$widget_ops = array('classname' => 'widget_archive', 'description' => __( 'A monthly archive of your site&#8217;s posts') );\n\t\tparent::__construct('archives', __('Archives'), $widget_ops);\n\t}\n\n\tfunction widget( $args, $instance ) {\n\t\textract($args);\n\t\t$c = ! empty( $instance['count'] ) ? '1' : '0';\n\t\t$d = ! empty( $instance['dropdown'] ) ? '1' : '0';\n\t\t$title = apply_filters('widget_title', empty($instance['title']) ? __('Archives') : $instance['title'], $instance, $this->id_base);\n\n\t\techo $before_widget;\n\t\tif ( $title )\n\t\t\techo $before_title . $title . $after_title;\n\n\t\tif ( $d ) {\n?>\n\t\t<select name=\"archive-dropdown\" onchange='document.location.href=this.options[this.selectedIndex].value;'> <option value=\"\"><?php echo esc_attr(__('Select Month')); ?></option> <?php wp_get_archives(apply_filters('widget_archives_dropdown_args', array('type' => 'monthly', 'format' => 'option', 'show_post_count' => $c))); ?> </select>\n<?php\n\t\t} else {\n?>\n\t\t<ul>\n\t\t<?php wp_get_archives(apply_filters('widget_archives_args', array('type' => 'monthly', 'show_post_count' => $c))); ?>\n\t\t</ul>\n<?php\n\t\t}\n\n\t\techo $after_widget;\n\t}\n\n\tfunction update( $new_instance, $old_instance ) {\n\t\t$instance = $old_instance;\n\t\t$new_instance = wp_parse_args( (array) $new_instance, array( 'title' => '', 'count' => 0, 'dropdown' => '') );\n\t\t$instance['title'] = strip_tags($new_instance['title']);\n\t\t$instance['count'] = $new_instance['count'] ? 1 : 0;\n\t\t$instance['dropdown'] = $new_instance['dropdown'] ? 1 : 0;\n\n\t\treturn $instance;\n\t}\n\n\tfunction form( $instance ) {\n\t\t$instance = wp_parse_args( (array) $instance, array( 'title' => '', 'count' => 0, 'dropdown' => '') );\n\t\t$title = strip_tags($instance['title']);\n\t\t$count = $instance['count'] ? 'checked=\"checked\"' : '';\n\t\t$dropdown = $instance['dropdown'] ? 'checked=\"checked\"' : '';\n?>\n\t\t<p><label for=\"<?php echo $this->get_field_id('title'); ?>\"><?php _e('Title:'); ?></label> <input class=\"widefat\" id=\"<?php echo $this->get_field_id('title'); ?>\" name=\"<?php echo $this->get_field_name('title'); ?>\" type=\"text\" value=\"<?php echo esc_attr($title); ?>\" /></p>\n\t\t<p>\n\t\t\t<input class=\"checkbox\" type=\"checkbox\" <?php echo $dropdown; ?> id=\"<?php echo $this->get_field_id('dropdown'); ?>\" name=\"<?php echo $this->get_field_name('dropdown'); ?>\" /> <label for=\"<?php echo $this->get_field_id('dropdown'); ?>\"><?php _e('Display as dropdown'); ?></label>\n\t\t\t<br/>\n\t\t\t<input class=\"checkbox\" type=\"checkbox\" <?php echo $count; ?> id=\"<?php echo $this->get_field_id('count'); ?>\" name=\"<?php echo $this->get_field_name('count'); ?>\" /> <label for=\"<?php echo $this->get_field_id('count'); ?>\"><?php _e('Show post counts'); ?></label>\n\t\t</p>\n<?php\n\t}\n}\n\n/**\n * Meta widget class\n *\n * Displays log in/out, RSS feed links, etc.\n *\n * @since 2.8.0\n */\nclass WP_Widget_Meta extends WP_Widget {\n\n\tfunction __construct() {\n\t\t$widget_ops = array('classname' => 'widget_meta', 'description' => __( \"Log in/out, admin, feed and WordPress links\") );\n\t\tparent::__construct('meta', __('Meta'), $widget_ops);\n\t}\n\n\tfunction widget( $args, $instance ) {\n\t\textract($args);\n\t\t$title = apply_filters('widget_title', empty($instance['title']) ? __('Meta') : $instance['title'], $instance, $this->id_base);\n\n\t\techo $before_widget;\n\t\tif ( $title )\n\t\t\techo $before_title . $title . $after_title;\n?>\n\t\t\t<ul>\n\t\t\t<?php wp_register(); ?>\n\t\t\t<li><?php wp_loginout(); ?></li>\n\t\t\t<li><a href=\"<?php bloginfo('rss2_url'); ?>\" title=\"<?php echo esc_attr(__('Syndicate this site using RSS 2.0')); ?>\"><?php _e('Entries <abbr title=\"Really Simple Syndication\">RSS</abbr>'); ?></a></li>\n\t\t\t<li><a href=\"<?php bloginfo('comments_rss2_url'); ?>\" title=\"<?php echo esc_attr(__('The latest comments to all posts in RSS')); ?>\"><?php _e('Comments <abbr title=\"Really Simple Syndication\">RSS</abbr>'); ?></a></li>\n\t\t\t<?php echo apply_filters( 'widget_meta_poweredby', sprintf( '<li><a href=\"%s\" title=\"%s\">%s</a></li>',\n\t\t\t\tesc_url( __( 'http://wordpress.org/' ) ),\n\t\t\t\tesc_attr__( 'Powered by WordPress, state-of-the-art semantic personal publishing platform.' ),\n\t\t\t\t_x( 'WordPress.org', 'meta widget link text' )\n\t\t\t) ); ?>\n\t\t\t<?php wp_meta(); ?>\n\t\t\t</ul>\n<?php\n\t\techo $after_widget;\n\t}\n\n\tfunction update( $new_instance, $old_instance ) {\n\t\t$instance = $old_instance;\n\t\t$instance['title'] = strip_tags($new_instance['title']);\n\n\t\treturn $instance;\n\t}\n\n\tfunction form( $instance ) {\n\t\t$instance = wp_parse_args( (array) $instance, array( 'title' => '' ) );\n\t\t$title = strip_tags($instance['title']);\n?>\n\t\t\t<p><label for=\"<?php echo $this->get_field_id('title'); ?>\"><?php _e('Title:'); ?></label> <input class=\"widefat\" id=\"<?php echo $this->get_field_id('title'); ?>\" name=\"<?php echo $this->get_field_name('title'); ?>\" type=\"text\" value=\"<?php echo esc_attr($title); ?>\" /></p>\n<?php\n\t}\n}\n\n/**\n * Calendar widget class\n *\n * @since 2.8.0\n */\nclass WP_Widget_Calendar extends WP_Widget {\n\n\tfunction __construct() {\n\t\t$widget_ops = array('classname' => 'widget_calendar', 'description' => __( 'A calendar of your site&#8217;s posts') );\n\t\tparent::__construct('calendar', __('Calendar'), $widget_ops);\n\t}\n\n\tfunction widget( $args, $instance ) {\n\t\textract($args);\n\t\t$title = apply_filters('widget_title', empty($instance['title']) ? '' : $instance['title'], $instance, $this->id_base);\n\t\techo $before_widget;\n\t\tif ( $title )\n\t\t\techo $before_title . $title . $after_title;\n\t\techo '<div id=\"calendar_wrap\">';\n\t\tget_calendar();\n\t\techo '</div>';\n\t\techo $after_widget;\n\t}\n\n\tfunction update( $new_instance, $old_instance ) {\n\t\t$instance = $old_instance;\n\t\t$instance['title'] = strip_tags($new_instance['title']);\n\n\t\treturn $instance;\n\t}\n\n\tfunction form( $instance ) {\n\t\t$instance = wp_parse_args( (array) $instance, array( 'title' => '' ) );\n\t\t$title = strip_tags($instance['title']);\n?>\n\t\t<p><label for=\"<?php echo $this->get_field_id('title'); ?>\"><?php _e('Title:'); ?></label>\n\t\t<input class=\"widefat\" id=\"<?php echo $this->get_field_id('title'); ?>\" name=\"<?php echo $this->get_field_name('title'); ?>\" type=\"text\" value=\"<?php echo esc_attr($title); ?>\" /></p>\n<?php\n\t}\n}\n\n/**\n * Text widget class\n *\n * @since 2.8.0\n */\nclass WP_Widget_Text extends WP_Widget {\n\n\tfunction __construct() {\n\t\t$widget_ops = array('classname' => 'widget_text', 'description' => __('Arbitrary text or HTML'));\n\t\t$control_ops = array('width' => 400, 'height' => 350);\n\t\tparent::__construct('text', __('Text'), $widget_ops, $control_ops);\n\t}\n\n\tfunction widget( $args, $instance ) {\n\t\textract($args);\n\t\t$title = apply_filters( 'widget_title', empty( $instance['title'] ) ? '' : $instance['title'], $instance, $this->id_base );\n\t\t$text = apply_filters( 'widget_text', empty( $instance['text'] ) ? '' : $instance['text'], $instance );\n\t\techo $before_widget;\n\t\tif ( !empty( $title ) ) { echo $before_title . $title . $after_title; } ?>\n\t\t\t<div class=\"textwidget\"><?php echo !empty( $instance['filter'] ) ? wpautop( $text ) : $text; ?></div>\n\t\t<?php\n\t\techo $after_widget;\n\t}\n\n\tfunction update( $new_instance, $old_instance ) {\n\t\t$instance = $old_instance;\n\t\t$instance['title'] = strip_tags($new_instance['title']);\n\t\tif ( current_user_can('unfiltered_html') )\n\t\t\t$instance['text'] =  $new_instance['text'];\n\t\telse\n\t\t\t$instance['text'] = stripslashes( wp_filter_post_kses( addslashes($new_instance['text']) ) ); // wp_filter_post_kses() expects slashed\n\t\t$instance['filter'] = isset($new_instance['filter']);\n\t\treturn $instance;\n\t}\n\n\tfunction form( $instance ) {\n\t\t$instance = wp_parse_args( (array) $instance, array( 'title' => '', 'text' => '' ) );\n\t\t$title = strip_tags($instance['title']);\n\t\t$text = esc_textarea($instance['text']);\n?>\n\t\t<p><label for=\"<?php echo $this->get_field_id('title'); ?>\"><?php _e('Title:'); ?></label>\n\t\t<input class=\"widefat\" id=\"<?php echo $this->get_field_id('title'); ?>\" name=\"<?php echo $this->get_field_name('title'); ?>\" type=\"text\" value=\"<?php echo esc_attr($title); ?>\" /></p>\n\n\t\t<textarea class=\"widefat\" rows=\"16\" cols=\"20\" id=\"<?php echo $this->get_field_id('text'); ?>\" name=\"<?php echo $this->get_field_name('text'); ?>\"><?php echo $text; ?></textarea>\n\n\t\t<p><input id=\"<?php echo $this->get_field_id('filter'); ?>\" name=\"<?php echo $this->get_field_name('filter'); ?>\" type=\"checkbox\" <?php checked(isset($instance['filter']) ? $instance['filter'] : 0); ?> />&nbsp;<label for=\"<?php echo $this->get_field_id('filter'); ?>\"><?php _e('Automatically add paragraphs'); ?></label></p>\n<?php\n\t}\n}\n\n/**\n * Categories widget class\n *\n * @since 2.8.0\n */\nclass WP_Widget_Categories extends WP_Widget {\n\n\tfunction __construct() {\n\t\t$widget_ops = array( 'classname' => 'widget_categories', 'description' => __( \"A list or dropdown of categories\" ) );\n\t\tparent::__construct('categories', __('Categories'), $widget_ops);\n\t}\n\n\tfunction widget( $args, $instance ) {\n\t\textract( $args );\n\n\t\t$title = apply_filters('widget_title', empty( $instance['title'] ) ? __( 'Categories' ) : $instance['title'], $instance, $this->id_base);\n\t\t$c = ! empty( $instance['count'] ) ? '1' : '0';\n\t\t$h = ! empty( $instance['hierarchical'] ) ? '1' : '0';\n\t\t$d = ! empty( $instance['dropdown'] ) ? '1' : '0';\n\n\t\techo $before_widget;\n\t\tif ( $title )\n\t\t\techo $before_title . $title . $after_title;\n\n\t\t$cat_args = array('orderby' => 'name', 'show_count' => $c, 'hierarchical' => $h);\n\n\t\tif ( $d ) {\n\t\t\t$cat_args['show_option_none'] = __('Select Category');\n\t\t\twp_dropdown_categories(apply_filters('widget_categories_dropdown_args', $cat_args));\n?>\n\n<script type='text/javascript'>\n/* <![CDATA[ */\n\tvar dropdown = document.getElementById(\"cat\");\n\tfunction onCatChange() {\n\t\tif ( dropdown.options[dropdown.selectedIndex].value > 0 ) {\n\t\t\tlocation.href = \"<?php echo home_url(); ?>/?cat=\"+dropdown.options[dropdown.selectedIndex].value;\n\t\t}\n\t}\n\tdropdown.onchange = onCatChange;\n/* ]]> */\n</script>\n\n<?php\n\t\t} else {\n?>\n\t\t<ul>\n<?php\n\t\t$cat_args['title_li'] = '';\n\t\twp_list_categories(apply_filters('widget_categories_args', $cat_args));\n?>\n\t\t</ul>\n<?php\n\t\t}\n\n\t\techo $after_widget;\n\t}\n\n\tfunction update( $new_instance, $old_instance ) {\n\t\t$instance = $old_instance;\n\t\t$instance['title'] = strip_tags($new_instance['title']);\n\t\t$instance['count'] = !empty($new_instance['count']) ? 1 : 0;\n\t\t$instance['hierarchical'] = !empty($new_instance['hierarchical']) ? 1 : 0;\n\t\t$instance['dropdown'] = !empty($new_instance['dropdown']) ? 1 : 0;\n\n\t\treturn $instance;\n\t}\n\n\tfunction form( $instance ) {\n\t\t//Defaults\n\t\t$instance = wp_parse_args( (array) $instance, array( 'title' => '') );\n\t\t$title = esc_attr( $instance['title'] );\n\t\t$count = isset($instance['count']) ? (bool) $instance['count'] :false;\n\t\t$hierarchical = isset( $instance['hierarchical'] ) ? (bool) $instance['hierarchical'] : false;\n\t\t$dropdown = isset( $instance['dropdown'] ) ? (bool) $instance['dropdown'] : false;\n?>\n\t\t<p><label for=\"<?php echo $this->get_field_id('title'); ?>\"><?php _e( 'Title:' ); ?></label>\n\t\t<input class=\"widefat\" id=\"<?php echo $this->get_field_id('title'); ?>\" name=\"<?php echo $this->get_field_name('title'); ?>\" type=\"text\" value=\"<?php echo $title; ?>\" /></p>\n\n\t\t<p><input type=\"checkbox\" class=\"checkbox\" id=\"<?php echo $this->get_field_id('dropdown'); ?>\" name=\"<?php echo $this->get_field_name('dropdown'); ?>\"<?php checked( $dropdown ); ?> />\n\t\t<label for=\"<?php echo $this->get_field_id('dropdown'); ?>\"><?php _e( 'Display as dropdown' ); ?></label><br />\n\n\t\t<input type=\"checkbox\" class=\"checkbox\" id=\"<?php echo $this->get_field_id('count'); ?>\" name=\"<?php echo $this->get_field_name('count'); ?>\"<?php checked( $count ); ?> />\n\t\t<label for=\"<?php echo $this->get_field_id('count'); ?>\"><?php _e( 'Show post counts' ); ?></label><br />\n\n\t\t<input type=\"checkbox\" class=\"checkbox\" id=\"<?php echo $this->get_field_id('hierarchical'); ?>\" name=\"<?php echo $this->get_field_name('hierarchical'); ?>\"<?php checked( $hierarchical ); ?> />\n\t\t<label for=\"<?php echo $this->get_field_id('hierarchical'); ?>\"><?php _e( 'Show hierarchy' ); ?></label></p>\n<?php\n\t}\n\n}\n\n/**\n * Recent_Posts widget class\n *\n * @since 2.8.0\n */\nclass WP_Widget_Recent_Posts extends WP_Widget {\n\n\tfunction __construct() {\n\t\t$widget_ops = array('classname' => 'widget_recent_entries', 'description' => __( \"The most recent posts on your site\") );\n\t\tparent::__construct('recent-posts', __('Recent Posts'), $widget_ops);\n\t\t$this->alt_option_name = 'widget_recent_entries';\n\n\t\tadd_action( 'save_post', array($this, 'flush_widget_cache') );\n\t\tadd_action( 'deleted_post', array($this, 'flush_widget_cache') );\n\t\tadd_action( 'switch_theme', array($this, 'flush_widget_cache') );\n\t}\n\n\tfunction widget($args, $instance) {\n\t\t$cache = wp_cache_get('widget_recent_posts', 'widget');\n\n\t\tif ( !is_array($cache) )\n\t\t\t$cache = array();\n\n\t\tif ( ! isset( $args['widget_id'] ) )\n\t\t\t$args['widget_id'] = $this->id;\n\n\t\tif ( isset( $cache[ $args['widget_id'] ] ) ) {\n\t\t\techo $cache[ $args['widget_id'] ];\n\t\t\treturn;\n\t\t}\n\n\t\tob_start();\n\t\textract($args);\n\n\t\t$title = ( ! empty( $instance['title'] ) ) ? $instance['title'] : __( 'Recent Posts' );\n\t\t$title = apply_filters( 'widget_title', $title, $instance, $this->id_base );\n\t\t$number = ( ! empty( $instance['number'] ) ) ? absint( $instance['number'] ) : 10;\n\t\tif ( ! $number )\n \t\t\t$number = 10;\n\t\t$show_date = isset( $instance['show_date'] ) ? $instance['show_date'] : false;\n\n\t\t$r = new WP_Query( apply_filters( 'widget_posts_args', array( 'posts_per_page' => $number, 'no_found_rows' => true, 'post_status' => 'publish', 'ignore_sticky_posts' => true ) ) );\n\t\tif ($r->have_posts()) :\n?>\n\t\t<?php echo $before_widget; ?>\n\t\t<?php if ( $title ) echo $before_title . $title . $after_title; ?>\n\t\t<ul>\n\t\t<?php while ( $r->have_posts() ) : $r->the_post(); ?>\n\t\t\t<li>\n\t\t\t\t<a href=\"<?php the_permalink() ?>\" title=\"<?php echo esc_attr( get_the_title() ? get_the_title() : get_the_ID() ); ?>\"><?php if ( get_the_title() ) the_title(); else the_ID(); ?></a>\n\t\t\t<?php if ( $show_date ) : ?>\n\t\t\t\t<span class=\"post-date\"><?php echo get_the_date(); ?></span>\n\t\t\t<?php endif; ?>\n\t\t\t</li>\n\t\t<?php endwhile; ?>\n\t\t</ul>\n\t\t<?php echo $after_widget; ?>\n<?php\n\t\t// Reset the global $the_post as this query will have stomped on it\n\t\twp_reset_postdata();\n\n\t\tendif;\n\n\t\t$cache[$args['widget_id']] = ob_get_flush();\n\t\twp_cache_set('widget_recent_posts', $cache, 'widget');\n\t}\n\n\tfunction update( $new_instance, $old_instance ) {\n\t\t$instance = $old_instance;\n\t\t$instance['title'] = strip_tags($new_instance['title']);\n\t\t$instance['number'] = (int) $new_instance['number'];\n\t\t$instance['show_date'] = isset( $new_instance['show_date'] ) ? (bool) $new_instance['show_date'] : false;\n\t\t$this->flush_widget_cache();\n\n\t\t$alloptions = wp_cache_get( 'alloptions', 'options' );\n\t\tif ( isset($alloptions['widget_recent_entries']) )\n\t\t\tdelete_option('widget_recent_entries');\n\n\t\treturn $instance;\n\t}\n\n\tfunction flush_widget_cache() {\n\t\twp_cache_delete('widget_recent_posts', 'widget');\n\t}\n\n\tfunction form( $instance ) {\n\t\t$title     = isset( $instance['title'] ) ? esc_attr( $instance['title'] ) : '';\n\t\t$number    = isset( $instance['number'] ) ? absint( $instance['number'] ) : 5;\n\t\t$show_date = isset( $instance['show_date'] ) ? (bool) $instance['show_date'] : false;\n?>\n\t\t<p><label for=\"<?php echo $this->get_field_id( 'title' ); ?>\"><?php _e( 'Title:' ); ?></label>\n\t\t<input class=\"widefat\" id=\"<?php echo $this->get_field_id( 'title' ); ?>\" name=\"<?php echo $this->get_field_name( 'title' ); ?>\" type=\"text\" value=\"<?php echo $title; ?>\" /></p>\n\n\t\t<p><label for=\"<?php echo $this->get_field_id( 'number' ); ?>\"><?php _e( 'Number of posts to show:' ); ?></label>\n\t\t<input id=\"<?php echo $this->get_field_id( 'number' ); ?>\" name=\"<?php echo $this->get_field_name( 'number' ); ?>\" type=\"text\" value=\"<?php echo $number; ?>\" size=\"3\" /></p>\n\n\t\t<p><input class=\"checkbox\" type=\"checkbox\" <?php checked( $show_date ); ?> id=\"<?php echo $this->get_field_id( 'show_date' ); ?>\" name=\"<?php echo $this->get_field_name( 'show_date' ); ?>\" />\n\t\t<label for=\"<?php echo $this->get_field_id( 'show_date' ); ?>\"><?php _e( 'Display post date?' ); ?></label></p>\n<?php\n\t}\n}\n\n/**\n * Recent_Comments widget class\n *\n * @since 2.8.0\n */\nclass WP_Widget_Recent_Comments extends WP_Widget {\n\n\tfunction __construct() {\n\t\t$widget_ops = array('classname' => 'widget_recent_comments', 'description' => __( 'The most recent comments' ) );\n\t\tparent::__construct('recent-comments', __('Recent Comments'), $widget_ops);\n\t\t$this->alt_option_name = 'widget_recent_comments';\n\n\t\tif ( is_active_widget(false, false, $this->id_base) )\n\t\t\tadd_action( 'wp_head', array($this, 'recent_comments_style') );\n\n\t\tadd_action( 'comment_post', array($this, 'flush_widget_cache') );\n\t\tadd_action( 'transition_comment_status', array($this, 'flush_widget_cache') );\n\t}\n\n\tfunction recent_comments_style() {\n\t\tif ( ! current_theme_supports( 'widgets' ) // Temp hack #14876\n\t\t\t|| ! apply_filters( 'show_recent_comments_widget_style', true, $this->id_base ) )\n\t\t\treturn;\n\t\t?>\n\t<style type=\"text/css\">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>\n<?php\n\t}\n\n\tfunction flush_widget_cache() {\n\t\twp_cache_delete('widget_recent_comments', 'widget');\n\t}\n\n\tfunction widget( $args, $instance ) {\n\t\tglobal $comments, $comment;\n\n\t\t$cache = wp_cache_get('widget_recent_comments', 'widget');\n\n\t\tif ( ! is_array( $cache ) )\n\t\t\t$cache = array();\n\n\t\tif ( ! isset( $args['widget_id'] ) )\n\t\t\t$args['widget_id'] = $this->id;\n\n\t\tif ( isset( $cache[ $args['widget_id'] ] ) ) {\n\t\t\techo $cache[ $args['widget_id'] ];\n\t\t\treturn;\n\t\t}\n\n \t\textract($args, EXTR_SKIP);\n \t\t$output = '';\n\n\t\t$title = ( ! empty( $instance['title'] ) ) ? $instance['title'] : __( 'Recent Comments' );\n\t\t$title = apply_filters( 'widget_title', $title, $instance, $this->id_base );\n\t\t$number = ( ! empty( $instance['number'] ) ) ? absint( $instance['number'] ) : 5;\n\t\tif ( ! $number )\n \t\t\t$number = 5;\n\n\t\t$comments = get_comments( apply_filters( 'widget_comments_args', array( 'number' => $number, 'status' => 'approve', 'post_status' => 'publish' ) ) );\n\t\t$output .= $before_widget;\n\t\tif ( $title )\n\t\t\t$output .= $before_title . $title . $after_title;\n\n\t\t$output .= '<ul id=\"recentcomments\">';\n\t\tif ( $comments ) {\n\t\t\t// Prime cache for associated posts. (Prime post term cache if we need it for permalinks.)\n\t\t\t$post_ids = array_unique( wp_list_pluck( $comments, 'comment_post_ID' ) );\n\t\t\t_prime_post_caches( $post_ids, strpos( get_option( 'permalink_structure' ), '%category%' ), false );\n\n\t\t\tforeach ( (array) $comments as $comment) {\n\t\t\t\t$output .=  '<li class=\"recentcomments\">' . /* translators: comments widget: 1: comment author, 2: post link */ sprintf(_x('%1$s on %2$s', 'widgets'), get_comment_author_link(), '<a href=\"' . esc_url( get_comment_link($comment->comment_ID) ) . '\">' . get_the_title($comment->comment_post_ID) . '</a>') . '</li>';\n\t\t\t}\n \t\t}\n\t\t$output .= '</ul>';\n\t\t$output .= $after_widget;\n\n\t\techo $output;\n\t\t$cache[$args['widget_id']] = $output;\n\t\twp_cache_set('widget_recent_comments', $cache, 'widget');\n\t}\n\n\tfunction update( $new_instance, $old_instance ) {\n\t\t$instance = $old_instance;\n\t\t$instance['title'] = strip_tags($new_instance['title']);\n\t\t$instance['number'] = absint( $new_instance['number'] );\n\t\t$this->flush_widget_cache();\n\n\t\t$alloptions = wp_cache_get( 'alloptions', 'options' );\n\t\tif ( isset($alloptions['widget_recent_comments']) )\n\t\t\tdelete_option('widget_recent_comments');\n\n\t\treturn $instance;\n\t}\n\n\tfunction form( $instance ) {\n\t\t$title  = isset( $instance['title'] ) ? esc_attr( $instance['title'] ) : '';\n\t\t$number = isset( $instance['number'] ) ? absint( $instance['number'] ) : 5;\n?>\n\t\t<p><label for=\"<?php echo $this->get_field_id( 'title' ); ?>\"><?php _e( 'Title:' ); ?></label>\n\t\t<input class=\"widefat\" id=\"<?php echo $this->get_field_id( 'title' ); ?>\" name=\"<?php echo $this->get_field_name( 'title' ); ?>\" type=\"text\" value=\"<?php echo $title; ?>\" /></p>\n\n\t\t<p><label for=\"<?php echo $this->get_field_id( 'number' ); ?>\"><?php _e( 'Number of comments to show:' ); ?></label>\n\t\t<input id=\"<?php echo $this->get_field_id( 'number' ); ?>\" name=\"<?php echo $this->get_field_name( 'number' ); ?>\" type=\"text\" value=\"<?php echo $number; ?>\" size=\"3\" /></p>\n<?php\n\t}\n}\n\n/**\n * RSS widget class\n *\n * @since 2.8.0\n */\nclass WP_Widget_RSS extends WP_Widget {\n\n\tfunction __construct() {\n\t\t$widget_ops = array( 'description' => __('Entries from any RSS or Atom feed') );\n\t\t$control_ops = array( 'width' => 400, 'height' => 200 );\n\t\tparent::__construct( 'rss', __('RSS'), $widget_ops, $control_ops );\n\t}\n\n\tfunction widget($args, $instance) {\n\n\t\tif ( isset($instance['error']) && $instance['error'] )\n\t\t\treturn;\n\n\t\textract($args, EXTR_SKIP);\n\n\t\t$url = ! empty( $instance['url'] ) ? $instance['url'] : '';\n\t\twhile ( stristr($url, 'http') != $url )\n\t\t\t$url = substr($url, 1);\n\n\t\tif ( empty($url) )\n\t\t\treturn;\n\n\t\t// self-url destruction sequence\n\t\tif ( in_array( untrailingslashit( $url ), array( site_url(), home_url() ) ) )\n\t\t\treturn;\n\n\t\t$rss = fetch_feed($url);\n\t\t$title = $instance['title'];\n\t\t$desc = '';\n\t\t$link = '';\n\n\t\tif ( ! is_wp_error($rss) ) {\n\t\t\t$desc = esc_attr(strip_tags(@html_entity_decode($rss->get_description(), ENT_QUOTES, get_option('blog_charset'))));\n\t\t\tif ( empty($title) )\n\t\t\t\t$title = esc_html(strip_tags($rss->get_title()));\n\t\t\t$link = esc_url(strip_tags($rss->get_permalink()));\n\t\t\twhile ( stristr($link, 'http') != $link )\n\t\t\t\t$link = substr($link, 1);\n\t\t}\n\n\t\tif ( empty($title) )\n\t\t\t$title = empty($desc) ? __('Unknown Feed') : $desc;\n\n\t\t$title = apply_filters('widget_title', $title, $instance, $this->id_base);\n\t\t$url = esc_url(strip_tags($url));\n\t\t$icon = includes_url('images/rss.png');\n\t\tif ( $title )\n\t\t\t$title = \"<a class='rsswidget' href='$url' title='\" . esc_attr__( 'Syndicate this content' ) .\"'><img style='border:0' width='14' height='14' src='$icon' alt='RSS' /></a> <a class='rsswidget' href='$link' title='$desc'>$title</a>\";\n\n\t\techo $before_widget;\n\t\tif ( $title )\n\t\t\techo $before_title . $title . $after_title;\n\t\twp_widget_rss_output( $rss, $instance );\n\t\techo $after_widget;\n\n\t\tif ( ! is_wp_error($rss) )\n\t\t\t$rss->__destruct();\n\t\tunset($rss);\n\t}\n\n\tfunction update($new_instance, $old_instance) {\n\t\t$testurl = ( isset( $new_instance['url'] ) && ( !isset( $old_instance['url'] ) || ( $new_instance['url'] != $old_instance['url'] ) ) );\n\t\treturn wp_widget_rss_process( $new_instance, $testurl );\n\t}\n\n\tfunction form($instance) {\n\n\t\tif ( empty($instance) )\n\t\t\t$instance = array( 'title' => '', 'url' => '', 'items' => 10, 'error' => false, 'show_summary' => 0, 'show_author' => 0, 'show_date' => 0 );\n\t\t$instance['number'] = $this->number;\n\n\t\twp_widget_rss_form( $instance );\n\t}\n}\n\n/**\n * Display the RSS entries in a list.\n *\n * @since 2.5.0\n *\n * @param string|array|object $rss RSS url.\n * @param array $args Widget arguments.\n */\nfunction wp_widget_rss_output( $rss, $args = array() ) {\n\tif ( is_string( $rss ) ) {\n\t\t$rss = fetch_feed($rss);\n\t} elseif ( is_array($rss) && isset($rss['url']) ) {\n\t\t$args = $rss;\n\t\t$rss = fetch_feed($rss['url']);\n\t} elseif ( !is_object($rss) ) {\n\t\treturn;\n\t}\n\n\tif ( is_wp_error($rss) ) {\n\t\tif ( is_admin() || current_user_can('manage_options') )\n\t\t\techo '<p>' . sprintf( __('<strong>RSS Error</strong>: %s'), $rss->get_error_message() ) . '</p>';\n\t\treturn;\n\t}\n\n\t$default_args = array( 'show_author' => 0, 'show_date' => 0, 'show_summary' => 0 );\n\t$args = wp_parse_args( $args, $default_args );\n\textract( $args, EXTR_SKIP );\n\n\t$items = (int) $items;\n\tif ( $items < 1 || 20 < $items )\n\t\t$items = 10;\n\t$show_summary  = (int) $show_summary;\n\t$show_author   = (int) $show_author;\n\t$show_date     = (int) $show_date;\n\n\tif ( !$rss->get_item_quantity() ) {\n\t\techo '<ul><li>' . __( 'An error has occurred, which probably means the feed is down. Try again later.' ) . '</li></ul>';\n\t\t$rss->__destruct();\n\t\tunset($rss);\n\t\treturn;\n\t}\n\n\techo '<ul>';\n\tforeach ( $rss->get_items(0, $items) as $item ) {\n\t\t$link = $item->get_link();\n\t\twhile ( stristr($link, 'http') != $link )\n\t\t\t$link = substr($link, 1);\n\t\t$link = esc_url(strip_tags($link));\n\t\t$title = esc_attr(strip_tags($item->get_title()));\n\t\tif ( empty($title) )\n\t\t\t$title = __('Untitled');\n\n\t\t$desc = str_replace( array(\"\\n\", \"\\r\"), ' ', esc_attr( strip_tags( @html_entity_decode( $item->get_description(), ENT_QUOTES, get_option('blog_charset') ) ) ) );\n\t\t$excerpt = wp_html_excerpt( $desc, 360 );\n\n\t\t// Append ellipsis. Change existing [...] to [&hellip;].\n\t\tif ( '[...]' == substr( $excerpt, -5 ) )\n\t\t\t$excerpt = substr( $excerpt, 0, -5 ) . '[&hellip;]';\n\t\telseif ( '[&hellip;]' != substr( $excerpt, -10 ) && $desc != $excerpt )\n\t\t\t$excerpt .= ' [&hellip;]';\n\n\t\t$excerpt = esc_html( $excerpt );\n\n\t\tif ( $show_summary ) {\n\t\t\t$summary = \"<div class='rssSummary'>$excerpt</div>\";\n\t\t} else {\n\t\t\t$summary = '';\n\t\t}\n\n\t\t$date = '';\n\t\tif ( $show_date ) {\n\t\t\t$date = $item->get_date( 'U' );\n\n\t\t\tif ( $date ) {\n\t\t\t\t$date = ' <span class=\"rss-date\">' . date_i18n( get_option( 'date_format' ), $date ) . '</span>';\n\t\t\t}\n\t\t}\n\n\t\t$author = '';\n\t\tif ( $show_author ) {\n\t\t\t$author = $item->get_author();\n\t\t\tif ( is_object($author) ) {\n\t\t\t\t$author = $author->get_name();\n\t\t\t\t$author = ' <cite>' . esc_html( strip_tags( $author ) ) . '</cite>';\n\t\t\t}\n\t\t}\n\n\t\tif ( $link == '' ) {\n\t\t\techo \"<li>$title{$date}{$summary}{$author}</li>\";\n\t\t} else {\n\t\t\techo \"<li><a class='rsswidget' href='$link' title='$desc'>$title</a>{$date}{$summary}{$author}</li>\";\n\t\t}\n\t}\n\techo '</ul>';\n\t$rss->__destruct();\n\tunset($rss);\n}\n\n/**\n * Display RSS widget options form.\n *\n * The options for what fields are displayed for the RSS form are all booleans\n * and are as follows: 'url', 'title', 'items', 'show_summary', 'show_author',\n * 'show_date'.\n *\n * @since 2.5.0\n *\n * @param array|string $args Values for input fields.\n * @param array $inputs Override default display options.\n */\nfunction wp_widget_rss_form( $args, $inputs = null ) {\n\n\t$default_inputs = array( 'url' => true, 'title' => true, 'items' => true, 'show_summary' => true, 'show_author' => true, 'show_date' => true );\n\t$inputs = wp_parse_args( $inputs, $default_inputs );\n\textract( $args );\n\textract( $inputs, EXTR_SKIP);\n\n\t$number = esc_attr( $number );\n\t$title  = esc_attr( $title );\n\t$url    = esc_url( $url );\n\t$items  = (int) $items;\n\tif ( $items < 1 || 20 < $items )\n\t\t$items  = 10;\n\t$show_summary   = (int) $show_summary;\n\t$show_author    = (int) $show_author;\n\t$show_date      = (int) $show_date;\n\n\tif ( !empty($error) )\n\t\techo '<p class=\"widget-error\"><strong>' . sprintf( __('RSS Error: %s'), $error) . '</strong></p>';\n\n\tif ( $inputs['url'] ) :\n?>\n\t<p><label for=\"rss-url-<?php echo $number; ?>\"><?php _e('Enter the RSS feed URL here:'); ?></label>\n\t<input class=\"widefat\" id=\"rss-url-<?php echo $number; ?>\" name=\"widget-rss[<?php echo $number; ?>][url]\" type=\"text\" value=\"<?php echo $url; ?>\" /></p>\n<?php endif; if ( $inputs['title'] ) : ?>\n\t<p><label for=\"rss-title-<?php echo $number; ?>\"><?php _e('Give the feed a title (optional):'); ?></label>\n\t<input class=\"widefat\" id=\"rss-title-<?php echo $number; ?>\" name=\"widget-rss[<?php echo $number; ?>][title]\" type=\"text\" value=\"<?php echo $title; ?>\" /></p>\n<?php endif; if ( $inputs['items'] ) : ?>\n\t<p><label for=\"rss-items-<?php echo $number; ?>\"><?php _e('How many items would you like to display?'); ?></label>\n\t<select id=\"rss-items-<?php echo $number; ?>\" name=\"widget-rss[<?php echo $number; ?>][items]\">\n<?php\n\t\tfor ( $i = 1; $i <= 20; ++$i )\n\t\t\techo \"<option value='$i' \" . selected( $items, $i, false ) . \">$i</option>\";\n?>\n\t</select></p>\n<?php endif; if ( $inputs['show_summary'] ) : ?>\n\t<p><input id=\"rss-show-summary-<?php echo $number; ?>\" name=\"widget-rss[<?php echo $number; ?>][show_summary]\" type=\"checkbox\" value=\"1\" <?php if ( $show_summary ) echo 'checked=\"checked\"'; ?>/>\n\t<label for=\"rss-show-summary-<?php echo $number; ?>\"><?php _e('Display item content?'); ?></label></p>\n<?php endif; if ( $inputs['show_author'] ) : ?>\n\t<p><input id=\"rss-show-author-<?php echo $number; ?>\" name=\"widget-rss[<?php echo $number; ?>][show_author]\" type=\"checkbox\" value=\"1\" <?php if ( $show_author ) echo 'checked=\"checked\"'; ?>/>\n\t<label for=\"rss-show-author-<?php echo $number; ?>\"><?php _e('Display item author if available?'); ?></label></p>\n<?php endif; if ( $inputs['show_date'] ) : ?>\n\t<p><input id=\"rss-show-date-<?php echo $number; ?>\" name=\"widget-rss[<?php echo $number; ?>][show_date]\" type=\"checkbox\" value=\"1\" <?php if ( $show_date ) echo 'checked=\"checked\"'; ?>/>\n\t<label for=\"rss-show-date-<?php echo $number; ?>\"><?php _e('Display item date?'); ?></label></p>\n<?php\n\tendif;\n\tforeach ( array_keys($default_inputs) as $input ) :\n\t\tif ( 'hidden' === $inputs[$input] ) :\n\t\t\t$id = str_replace( '_', '-', $input );\n?>\n\t<input type=\"hidden\" id=\"rss-<?php echo $id; ?>-<?php echo $number; ?>\" name=\"widget-rss[<?php echo $number; ?>][<?php echo $input; ?>]\" value=\"<?php echo $$input; ?>\" />\n<?php\n\t\tendif;\n\tendforeach;\n}\n\n/**\n * Process RSS feed widget data and optionally retrieve feed items.\n *\n * The feed widget can not have more than 20 items or it will reset back to the\n * default, which is 10.\n *\n * The resulting array has the feed title, feed url, feed link (from channel),\n * feed items, error (if any), and whether to show summary, author, and date.\n * All respectively in the order of the array elements.\n *\n * @since 2.5.0\n *\n * @param array $widget_rss RSS widget feed data. Expects unescaped data.\n * @param bool $check_feed Optional, default is true. Whether to check feed for errors.\n * @return array\n */\nfunction wp_widget_rss_process( $widget_rss, $check_feed = true ) {\n\t$items = (int) $widget_rss['items'];\n\tif ( $items < 1 || 20 < $items )\n\t\t$items = 10;\n\t$url           = esc_url_raw(strip_tags( $widget_rss['url'] ));\n\t$title         = trim(strip_tags( $widget_rss['title'] ));\n\t$show_summary  = isset($widget_rss['show_summary']) ? (int) $widget_rss['show_summary'] : 0;\n\t$show_author   = isset($widget_rss['show_author']) ? (int) $widget_rss['show_author'] :0;\n\t$show_date     = isset($widget_rss['show_date']) ? (int) $widget_rss['show_date'] : 0;\n\n\tif ( $check_feed ) {\n\t\t$rss = fetch_feed($url);\n\t\t$error = false;\n\t\t$link = '';\n\t\tif ( is_wp_error($rss) ) {\n\t\t\t$error = $rss->get_error_message();\n\t\t} else {\n\t\t\t$link = esc_url(strip_tags($rss->get_permalink()));\n\t\t\twhile ( stristr($link, 'http') != $link )\n\t\t\t\t$link = substr($link, 1);\n\n\t\t\t$rss->__destruct();\n\t\t\tunset($rss);\n\t\t}\n\t}\n\n\treturn compact( 'title', 'url', 'link', 'items', 'error', 'show_summary', 'show_author', 'show_date' );\n}\n\n/**\n * Tag cloud widget class\n *\n * @since 2.8.0\n */\nclass WP_Widget_Tag_Cloud extends WP_Widget {\n\n\tfunction __construct() {\n\t\t$widget_ops = array( 'description' => __( \"Your most used tags in cloud format\") );\n\t\tparent::__construct('tag_cloud', __('Tag Cloud'), $widget_ops);\n\t}\n\n\tfunction widget( $args, $instance ) {\n\t\textract($args);\n\t\t$current_taxonomy = $this->_get_current_taxonomy($instance);\n\t\tif ( !empty($instance['title']) ) {\n\t\t\t$title = $instance['title'];\n\t\t} else {\n\t\t\tif ( 'post_tag' == $current_taxonomy ) {\n\t\t\t\t$title = __('Tags');\n\t\t\t} else {\n\t\t\t\t$tax = get_taxonomy($current_taxonomy);\n\t\t\t\t$title = $tax->labels->name;\n\t\t\t}\n\t\t}\n\t\t$title = apply_filters('widget_title', $title, $instance, $this->id_base);\n\n\t\techo $before_widget;\n\t\tif ( $title )\n\t\t\techo $before_title . $title . $after_title;\n\t\techo '<div class=\"tagcloud\">';\n\t\twp_tag_cloud( apply_filters('widget_tag_cloud_args', array('taxonomy' => $current_taxonomy) ) );\n\t\techo \"</div>\\n\";\n\t\techo $after_widget;\n\t}\n\n\tfunction update( $new_instance, $old_instance ) {\n\t\t$instance['title'] = strip_tags(stripslashes($new_instance['title']));\n\t\t$instance['taxonomy'] = stripslashes($new_instance['taxonomy']);\n\t\treturn $instance;\n\t}\n\n\tfunction form( $instance ) {\n\t\t$current_taxonomy = $this->_get_current_taxonomy($instance);\n?>\n\t<p><label for=\"<?php echo $this->get_field_id('title'); ?>\"><?php _e('Title:') ?></label>\n\t<input type=\"text\" class=\"widefat\" id=\"<?php echo $this->get_field_id('title'); ?>\" name=\"<?php echo $this->get_field_name('title'); ?>\" value=\"<?php if (isset ( $instance['title'])) {echo esc_attr( $instance['title'] );} ?>\" /></p>\n\t<p><label for=\"<?php echo $this->get_field_id('taxonomy'); ?>\"><?php _e('Taxonomy:') ?></label>\n\t<select class=\"widefat\" id=\"<?php echo $this->get_field_id('taxonomy'); ?>\" name=\"<?php echo $this->get_field_name('taxonomy'); ?>\">\n\t<?php foreach ( get_taxonomies() as $taxonomy ) :\n\t\t\t\t$tax = get_taxonomy($taxonomy);\n\t\t\t\tif ( !$tax->show_tagcloud || empty($tax->labels->name) )\n\t\t\t\t\tcontinue;\n\t?>\n\t\t<option value=\"<?php echo esc_attr($taxonomy) ?>\" <?php selected($taxonomy, $current_taxonomy) ?>><?php echo $tax->labels->name; ?></option>\n\t<?php endforeach; ?>\n\t</select></p><?php\n\t}\n\n\tfunction _get_current_taxonomy($instance) {\n\t\tif ( !empty($instance['taxonomy']) && taxonomy_exists($instance['taxonomy']) )\n\t\t\treturn $instance['taxonomy'];\n\n\t\treturn 'post_tag';\n\t}\n}\n\n/**\n * Navigation Menu widget class\n *\n * @since 3.0.0\n */\n class WP_Nav_Menu_Widget extends WP_Widget {\n\n\tfunction __construct() {\n\t\t$widget_ops = array( 'description' => __('Use this widget to add one of your custom menus as a widget.') );\n\t\tparent::__construct( 'nav_menu', __('Custom Menu'), $widget_ops );\n\t}\n\n\tfunction widget($args, $instance) {\n\t\t// Get menu\n\t\t$nav_menu = ! empty( $instance['nav_menu'] ) ? wp_get_nav_menu_object( $instance['nav_menu'] ) : false;\n\n\t\tif ( !$nav_menu )\n\t\t\treturn;\n\n\t\t$instance['title'] = apply_filters( 'widget_title', empty( $instance['title'] ) ? '' : $instance['title'], $instance, $this->id_base );\n\n\t\techo $args['before_widget'];\n\n\t\tif ( !empty($instance['title']) )\n\t\t\techo $args['before_title'] . $instance['title'] . $args['after_title'];\n\n\t\twp_nav_menu( array( 'fallback_cb' => '', 'menu' => $nav_menu ) );\n\n\t\techo $args['after_widget'];\n\t}\n\n\tfunction update( $new_instance, $old_instance ) {\n\t\t$instance['title'] = strip_tags( stripslashes($new_instance['title']) );\n\t\t$instance['nav_menu'] = (int) $new_instance['nav_menu'];\n\t\treturn $instance;\n\t}\n\n\tfunction form( $instance ) {\n\t\t$title = isset( $instance['title'] ) ? $instance['title'] : '';\n\t\t$nav_menu = isset( $instance['nav_menu'] ) ? $instance['nav_menu'] : '';\n\n\t\t// Get menus\n\t\t$menus = get_terms( 'nav_menu', array( 'hide_empty' => false ) );\n\n\t\t// If no menus exists, direct the user to go and create some.\n\t\tif ( !$menus ) {\n\t\t\techo '<p>'. sprintf( __('No menus have been created yet. <a href=\"%s\">Create some</a>.'), admin_url('nav-menus.php') ) .'</p>';\n\t\t\treturn;\n\t\t}\n\t\t?>\n\t\t<p>\n\t\t\t<label for=\"<?php echo $this->get_field_id('title'); ?>\"><?php _e('Title:') ?></label>\n\t\t\t<input type=\"text\" class=\"widefat\" id=\"<?php echo $this->get_field_id('title'); ?>\" name=\"<?php echo $this->get_field_name('title'); ?>\" value=\"<?php echo $title; ?>\" />\n\t\t</p>\n\t\t<p>\n\t\t\t<label for=\"<?php echo $this->get_field_id('nav_menu'); ?>\"><?php _e('Select Menu:'); ?></label>\n\t\t\t<select id=\"<?php echo $this->get_field_id('nav_menu'); ?>\" name=\"<?php echo $this->get_field_name('nav_menu'); ?>\">\n\t\t<?php\n\t\t\tforeach ( $menus as $menu ) {\n\t\t\t\techo '<option value=\"' . $menu->term_id . '\"'\n\t\t\t\t\t. selected( $nav_menu, $menu->term_id, false )\n\t\t\t\t\t. '>'. $menu->name . '</option>';\n\t\t\t}\n\t\t?>\n\t\t\t</select>\n\t\t</p>\n\t\t<?php\n\t}\n}\n\n/**\n * Register all of the default WordPress widgets on startup.\n *\n * Calls 'widgets_init' action after all of the WordPress widgets have been\n * registered.\n *\n * @since 2.2.0\n */\nfunction wp_widgets_init() {\n\tif ( !is_blog_installed() )\n\t\treturn;\n\n\tregister_widget('WP_Widget_Pages');\n\n\tregister_widget('WP_Widget_Calendar');\n\n\tregister_widget('WP_Widget_Archives');\n\n\tif ( get_option( 'link_manager_enabled' ) )\n\t\tregister_widget('WP_Widget_Links');\n\n\tregister_widget('WP_Widget_Meta');\n\n\tregister_widget('WP_Widget_Search');\n\n\tregister_widget('WP_Widget_Text');\n\n\tregister_widget('WP_Widget_Categories');\n\n\tregister_widget('WP_Widget_Recent_Posts');\n\n\tregister_widget('WP_Widget_Recent_Comments');\n\n\tregister_widget('WP_Widget_RSS');\n\n\tregister_widget('WP_Widget_Tag_Cloud');\n\n\tregister_widget('WP_Nav_Menu_Widget');\n\n\tdo_action('widgets_init');\n}\n\nadd_action('init', 'wp_widgets_init', 1);\n"]],"start1":0,"start2":0,"length1":0,"length2":45770}]],"length":45770}
{"contributors":[],"silentsave":false,"ts":1381342079222,"patch":[[{"diffs":[[0,"nt Posts"],[1,":"],[0,"'), $wid"]],"start1":22003,"start2":22003,"length1":16,"length2":17},{"diffs":[[0,"nt Posts"],[1,":"],[0,"' );\n\t\t$"]],"start1":22721,"start2":22721,"length1":16,"length2":17}]],"length":45772,"saved":false}
